generator client {
  provider      = "prisma-client-js"
  output        = "./generated/client"
  // binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
  directUrl = env("DB_DIRECT")
}

model User {
  id            Int          @id @default(autoincrement())
  email         String       @unique
  password      String
  role          String
  is_verified   Boolean      @default(false)
  job_seeker    Job_seeker[]
  company       Company[]
}
model Job_seeker {
  id                  Int          @id @default(autoincrement())
  user                User         @relation(fields: [user_id], references: [id])
  user_id             Int
  fullname            String
  dob                 DateTime
  gender              String
  phone_number        String?
  city                String?
  certificates        List_certificate[]
  disabilities        List_disability[]
  job_seeker_skills   Job_seeker_skills[]
  job_applications    Job_application[]
}

model Company {
  id                Int       @id @default(autoincrement())
  user              User      @relation(fields: [user_id], references: [id])
  user_id           Int
  name              String
  city              String
  about             String
  logo              String?
  picture           String?
  jobs              Jobs[]
  job_application   Job_application[]
}

model Jobs {
  id                Int           @id @default(autoincrement())
  company           Company       @relation(fields: [company_id], references: [id])
  company_id        Int
  title             String
  description       String
  employment_type    String?
  estimate_salary    Int?
  gender            String?
  required_skills   Required_skills[]
  jobApplications   Job_application[]
  list_ability      List_ability[]
}

model List_certificate {
  id              Int         @id @default(autoincrement())
  job_seeker      Job_seeker  @relation(fields: [job_seeker_id], references: [id])
  job_seeker_id   Int
  name            String?
  description     String?
}

model Skills {
  id                    Int          @id @default(autoincrement())
  name                  String
  job_seeker_skills     Job_seeker_skills[]
  required_skills       Required_skills[]
}

model List_disability {
  id                Int         @id @default(autoincrement())
  job_seeker        Job_seeker  @relation(fields: [job_seeker_id], references: [id])
  job_seeker_id     Int
  disability        Disability  @relation(fields: [disability_id], references: [id])
  disability_id     Int
}

model Job_application {
  id             Int         @id @default(autoincrement())
  job_seeker     Job_seeker  @relation(fields: [job_seeker_id], references: [id])
  job_seeker_id  Int
  job            Jobs        @relation(fields: [job_id], references: [id])
  job_id         Int
  company        Company     @relation(fields: [company_id], references: [id])
  company_id     Int
  cover_letter   String?
  status         String
}

model Disability {
  id                Int          @id @default(autoincrement())
  category          Category     @relation(fields: [category_id], references: [id])
  category_id       Int
  name              String
  list_disabilities List_disability[]
}

model Ability {
  id          Int     @id @default(autoincrement())
  name        String
  list_abilty List_ability[]
}

model List_ability {
  id          Int       @id @default(autoincrement())
  ability     Ability?  @relation(fields: [ability_id], references: [id])
  ability_id  Int?
  job         Jobs?     @relation(fields: [job_id], references: [id])
  job_id      Int?
}

model Job_seeker_skills {
  id              Int         @id @default(autoincrement())
  job_seeker      Job_seeker  @relation(fields: [job_seeker_id], references: [id])
  job_seeker_id   Int
  skills          Skills      @relation(fields: [skill_id], references: [id])
  skill_id        Int
}

model Category {
  id            Int          @id @default(autoincrement())
  name          String
  disabilities  Disability[]
}

model Required_skills {
  id          Int     @id @default(autoincrement())
  job         Jobs    @relation(fields: [job_id], references: [id])
  job_id      Int
  skills      Skills  @relation(fields: [skill_id], references: [id])
  skill_id    Int
}

